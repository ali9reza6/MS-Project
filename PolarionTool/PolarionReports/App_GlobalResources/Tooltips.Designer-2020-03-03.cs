//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PolarionReports.App_GlobalResources {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Tooltips {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Tooltips() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("PolarionReports.App_GlobalResources.Tooltips", typeof(Tooltips).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Requirements with invalid Allocation:
        ///-          Invalid Allocation
        ///-          Incorrect interface allocation
        ///-          Incorrect ARCH allocation
        ///
        ///Required action: Correct allocation
        ///-          Valid Allocation: “HW” | “SW” | “Mech”
        ///-          Interface: „Interface“ + „HW“ | „SW“ | „Mech“
        ///-          ARCH:  „ARCH“ + „HW“ | „SW“ | „Mech“
        ///-          ARCH: &quot;ARCH&quot; + &quot;HW&quot; + &quot;SE&quot;.
        /// </summary>
        public static string A30AllocInvalid {
            get {
                return ResourceManager.GetString("A30AllocInvalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Additional Requirements defined in the Element Architecture document correctly linked to Components and Interfaces.
        /// </summary>
        public static string A30AssociatedAdditionalRequirements {
            get {
                return ResourceManager.GetString("A30AssociatedAdditionalRequirements", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Components in 30 Element Architecture without any requirements (neither linked nor additionally specified
        ///Required action: check if additional requirements should be defined.
        /// </summary>
        public static string A30ComponentsWithoutLinkedRequirements {
            get {
                return ResourceManager.GetString("A30ComponentsWithoutLinkedRequirements", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Coverage Report checks linkage to all documents related to the Element Architecture document.
        /// </summary>
        public static string A30CoverageReport {
            get {
                return ResourceManager.GetString("A30CoverageReport", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Requirements in Status “Deferred”
        ///Required action: Requirements have been postponed for later implementation. Check if these requirements should be planned for implementation at this time.
        /// </summary>
        public static string A30DeferredWorkitems {
            get {
                return ResourceManager.GetString("A30DeferredWorkitems", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Incorrect Requirement Allocation for architecturally significant requirements
        ///Required action: correct Requirement Allocation: “ARCH” + “HW” / “SW” / “Mech”.
        /// </summary>
        public static string A30ESEAndNotHWSWMech {
            get {
                return ResourceManager.GetString("A30ESEAndNotHWSWMech", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to High-level requirements without any child requirements
        ///Required action: Specify detailed requirements and indent them (to create a parent/child relationship to the high-level requirement).
        /// </summary>
        public static string A30HighLevelRequirementsWithoutAnyBreakDownRequirements {
            get {
                return ResourceManager.GetString("A30HighLevelRequirementsWithoutAnyBreakDownRequirements", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Interface Requirements linked to Component or non-Interface Requirements linked to Interface
        ///Required action:
        ///1) correct invalid associations or links or
        ///2) correct Requirement Allocation.
        /// </summary>
        public static string A30IncorrectlyAssociatedAdditionalRequirements {
            get {
                return ResourceManager.GetString("A30IncorrectlyAssociatedAdditionalRequirements", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Interface Requirements linked to Component or non-Interface Requirements linked to Interface.
        ///Required action: 
        ///1) Correct invalid links or 
        ///2) Correct Requirement Allocation.
        /// </summary>
        public static string A30IncorrectlyAssociatedAdditionalRequirements50HW {
            get {
                return ResourceManager.GetString("A30IncorrectlyAssociatedAdditionalRequirements50HW", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Interface Requirements linked to Component or non-Interface Requirements linked to Interface.
        ///Required action:
        ///1) correct invalid links or
        ///2) correct Requirement Allocation.
        /// </summary>
        public static string A30IncorrectlyAssociatedAdditionalRequirements50SW {
            get {
                return ResourceManager.GetString("A30IncorrectlyAssociatedAdditionalRequirements50SW", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Incorrect Interface Requirement Allocation
        ///Required action: correct Requirement Allocation: “Interface” + “HW” / “SW” / “Mech”.
        /// </summary>
        public static string A30InterfaceAndNotHWSWMech {
            get {
                return ResourceManager.GetString("A30InterfaceAndNotHWSWMech", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Interfaces not referenced in 30 Interface Requirements
        ///Required action: Include missing Interfaces defined in the Element Architecture in 30 Interface Requirements.
        /// </summary>
        public static string A30InterfacesNotReferenced {
            get {
                return ResourceManager.GetString("A30InterfacesNotReferenced", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Interfaces without any Components connected
        ///Required action: Link Component(s) the Interface is connected to. Interface &quot;connects to&quot; Component(s). A Wiki may be used for visualizing the relationships in the document.
        /// </summary>
        public static string A30InterfacesWithoutConnectedComponents {
            get {
                return ResourceManager.GetString("A30InterfacesWithoutConnectedComponents", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Interfaces without linked requirements.
        /// </summary>
        public static string A30InterfacesWithoutLinkedRequirements {
            get {
                return ResourceManager.GetString("A30InterfacesWithoutLinkedRequirements", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Interfaces and Components may be referenced in the Interface Requirements to be further detailed.
        /// </summary>
        public static string A30LinkageTo30InterfaceRequirements {
            get {
                return ResourceManager.GetString("A30LinkageTo30InterfaceRequirements", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Additional HW Requirements defined in the Element Architecture document must be referenced or linked to the Hardware Requirements.
        /// </summary>
        public static string A30LinkageTo40HardwareRequirements {
            get {
                return ResourceManager.GetString("A30LinkageTo40HardwareRequirements", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Additional SW Requirements defined in the Element Architecture document must be referenced or linked to the Software Requirements.
        /// </summary>
        public static string A30LinkageTo40SoftwareRequirements {
            get {
                return ResourceManager.GetString("A30LinkageTo40SoftwareRequirements", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to All additional HW Requirements defined in the Element Architecture document must be correctly associated (indented or linked) with Components or Interfaces (either within the Element Architecture Document and/or to a HW Architectural Design document).
        /// </summary>
        public static string A30LinkageTo50HWArchitecturalDesign {
            get {
                return ResourceManager.GetString("A30LinkageTo50HWArchitecturalDesign", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to All additional SW Requirements defined in the Element Architecture document must be correctly associated (indented or linked) with Components or Interfaces (either within the Element Architecture Document and/or to the SW Architectural Design document).
        /// </summary>
        public static string A30LinkageTo50SWArchitecturalDesign {
            get {
                return ResourceManager.GetString("A30LinkageTo50SWArchitecturalDesign", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to All additional Requirements defined in the Element Architecture document must be correctly associated (indented or linked) with Components or Interfaces (either within the Element Architecture Document and/or to any other Architectural Design document).
        /// </summary>
        public static string A30LinkageWithin30ElementArchitecture {
            get {
                return ResourceManager.GetString("A30LinkageWithin30ElementArchitecture", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Additional HW Requirements defined in the Element Architecture document correctly referenced or linked to the Hardware Requirements.
        /// </summary>
        public static string A30LinkedAdditionalHardwareRequirements {
            get {
                return ResourceManager.GetString("A30LinkedAdditionalHardwareRequirements", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Additional HW Requirements defined in the Element Architecture document correctly linked to Components and Interfaces in 50 HW Architectural Design.
        /// </summary>
        public static string A30LinkedAdditionalHardwareRequirements50HW {
            get {
                return ResourceManager.GetString("A30LinkedAdditionalHardwareRequirements50HW", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Additional Interface Requirements correctly referenced or linked to the Interface Requirements.
        /// </summary>
        public static string A30LinkedAdditionalInterfaceRequirement {
            get {
                return ResourceManager.GetString("A30LinkedAdditionalInterfaceRequirement", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Additional interface requirements referenced or linked to 30 Interface Requirements must have Allocation &quot;Interface&quot; &amp; &quot;HW |SW | (HW &amp; SW)
        ///Required action:
        ///1) Correct the Requirement Allocation OR
        ///2) Do not reference the requirement in 30 Interface Requirements.
        /// </summary>
        public static string A30LinkedAdditionalRequirementsWithInvalidAllocation {
            get {
                return ResourceManager.GetString("A30LinkedAdditionalRequirementsWithInvalidAllocation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Additional HW Requirements referenced or linked to 40 Hardware Requirements must include Requirement Allocation &quot;HW&quot;
        ///1) Correct the Requirement Allocation OR
        ///2) Do not reference the requirement in the Hardware Requirements.
        /// </summary>
        public static string A30LinkedAdditionalRequirementsWithInvalidAllocation40HW {
            get {
                return ResourceManager.GetString("A30LinkedAdditionalRequirementsWithInvalidAllocation40HW", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Additional SW Requirements referenced or linked to 40 Software Requirements must include Requirement Allocation &quot;SW&quot;
        ///1) Correct the Requirement Allocation OR
        ///2) Do not reference the requirement in the Software Requirements.
        /// </summary>
        public static string A30LinkedAdditionalRequirementsWithInvalidAllocation40SW {
            get {
                return ResourceManager.GetString("A30LinkedAdditionalRequirementsWithInvalidAllocation40SW", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Additional HW requirements linked to 50 HW Architectural Design must include Allocation &quot;HW&quot;
        ///1) Correct the Requirement Allocation OR
        ///2) Remove link to the HW Architectural Design.
        /// </summary>
        public static string A30LinkedAdditionalRequirementsWithInvalidAllocation50HW {
            get {
                return ResourceManager.GetString("A30LinkedAdditionalRequirementsWithInvalidAllocation50HW", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Additional SW requirements linked to 50 SW Architectural Design must include Allocation &quot;SW&quot;
        ///1) Correct the Requirement Allocation OR
        ///2) Remove link to the SW Architectural Design.
        /// </summary>
        public static string A30LinkedAdditionalRequirementsWithInvalidAllocation50SW {
            get {
                return ResourceManager.GetString("A30LinkedAdditionalRequirementsWithInvalidAllocation50SW", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Additional SW Requirements defined in the Element Architecture document correctly referenced or linked to the Software Requirements.
        /// </summary>
        public static string A30LinkedAdditionalSoftwareRequirements {
            get {
                return ResourceManager.GetString("A30LinkedAdditionalSoftwareRequirements", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Additional SW Requirements defined in the Element Architecture document correctly linked to Components and Interfaces defined in 50 SW Architectural Design.
        /// </summary>
        public static string A30LinkedAdditionalSoftwareRequirements50SW {
            get {
                return ResourceManager.GetString("A30LinkedAdditionalSoftwareRequirements50SW", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Interfaces without any Components connected
        ///Required action: Link Component(s) the Interface is connected to. Interface &quot;connects to&quot; Component(s). A Wiki may be used for visualizing the relationships in the document.
        /// </summary>
        public static string A30nterfacesWithoutConnectedComponents {
            get {
                return ResourceManager.GetString("A30nterfacesWithoutConnectedComponents", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to For information only.
        /// </summary>
        public static string A30RejectedWorkitems {
            get {
                return ResourceManager.GetString("A30RejectedWorkitems", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Requirement Allocation shall be correctly defined for all Additional Requirements (Valid Requirement Allocation: HW, SW, Mech).
        /// </summary>
        public static string A30RequirementAllocation {
            get {
                return ResourceManager.GetString("A30RequirementAllocation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Requirement Status should be “Approved”, “Rejected”, “Deferred” or any Status referring to implementation or verification.
        /// </summary>
        public static string A30RequirementStatus {
            get {
                return ResourceManager.GetString("A30RequirementStatus", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This report section includes other noticeable requirements and additional warnings.
        /// </summary>
        public static string A30SpecialReports {
            get {
                return ResourceManager.GetString("A30SpecialReports", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Status Report lists noticeable requirements, checks the Requirement Allocation and provides addition information and warnings.
        /// </summary>
        public static string A30StatusConsitencyReport {
            get {
                return ResourceManager.GetString("A30StatusConsitencyReport", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Additional Requirements not associated (indented or linked) with any Component or Interface 
        ///Required action:
        ///1) Indent requirement for associating it with the related Component or Interface AND/OR
        ///2) Link the requirement to a Component or Interface identified in the Element Architecture AND/OR
        ///3) Link the requirement to a Component or Interface identified in a level 50 document (Architectural Design document)
        ///Remark: Additional components may be associated/linked with multiple Components or Interfaces [rest of string was truncated]&quot;;.
        /// </summary>
        public static string A30UnassociatedAdditionalRequirements {
            get {
                return ResourceManager.GetString("A30UnassociatedAdditionalRequirements", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Additional HW Requirements defined in the Element Architecture document not referenced or linked to the Hardware Requirements
        ///Required action:
        ///1) Include reference to the Additional HW Requirements in the Hardware Requirements document AND/OR
        ///2) Link additional HW Requirements to the Hardware Requirements document.
        /// </summary>
        public static string A30UnlinkedAdditionalHardwareRequirements {
            get {
                return ResourceManager.GetString("A30UnlinkedAdditionalHardwareRequirements", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Interfaces neither referenced in the &quot;Internal Interface Requirements&quot; nor in the &quot;External Interface Requirements&quot;.
        /// </summary>
        public static string A30UnlinkedAdditionalInterfaceRequirements {
            get {
                return ResourceManager.GetString("A30UnlinkedAdditionalInterfaceRequirements", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Additional SW Requirements defined in the Element Architecture document not referenced or linked to the Software Requirements
        ///Required action:
        ///1) Include reference to the Additional SW Requirements in the Software Requirements document AND/OR
        ///2) Link additional SW Requirements to the Software Requirements document.
        /// </summary>
        public static string A30UnlinkedAdditionalSoftwareRequirements {
            get {
                return ResourceManager.GetString("A30UnlinkedAdditionalSoftwareRequirements", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Interfaces neither referenced in the &quot;Internal Interface Requirements&quot; nor in the &quot;External Interface Requirements&quot;.
        /// </summary>
        public static string A30UnreferencedInterfaces {
            get {
                return ResourceManager.GetString("A30UnreferencedInterfaces", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Requirements in Status “In Clarification”
        ///Required action: make sure that these requirements get clarified and reviewed in time before implementation starts.
        /// </summary>
        public static string A30WorkitemsInClarification {
            get {
                return ResourceManager.GetString("A30WorkitemsInClarification", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Architecturally significant HW Element Requirements
        ///Required action:
        ///1) include these requirements in the “Checklist Review HW Architectural Design”
        ///2) Consider these requirements when designing the Hardware Architecture.
        /// </summary>
        public static string A30WorkitemsWithESEAndHW {
            get {
                return ResourceManager.GetString("A30WorkitemsWithESEAndHW", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Architecturally significant SW Element Requirements
        ///Required action: consider these requirements when designing the Software Architecture.
        /// </summary>
        public static string A30WorkitemsWithESEAndSW {
            get {
                return ResourceManager.GetString("A30WorkitemsWithESEAndSW", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Requirements with invalid Allocation:
        ///-          Invalid Allocation
        ///-          Incorrect interface allocation
        ///-          Incorrect ARCH allocation
        ///
        ///Required action: Correct allocation
        ///-          Valid Allocation: “HW” | “SW” | “Mech”
        ///-          Interface: „Interface“ + „HW“ | „SW“ | „Mech“
        ///-          ARCH:  „ARCH“ + „HW“ | „SW“ | „Mech“.
        /// </summary>
        public static string A30WorkItemsWithInvalidAllocation {
            get {
                return ResourceManager.GetString("A30WorkItemsWithInvalidAllocation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Additional Requirements without any Requirement Allocation
        ///Required action: define Requirement Allocation.
        /// </summary>
        public static string A30WorkItemsWithoutAllocation {
            get {
                return ResourceManager.GetString("A30WorkItemsWithoutAllocation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Required action: If the Prioritization is “Should Have”, it should be checked that the requirement text also includes “should have”.
        /// </summary>
        public static string A30WorkitemsWithPrioritizationShouldHave {
            get {
                return ResourceManager.GetString("A30WorkitemsWithPrioritizationShouldHave", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Requirements in Status “Draft”
        ///Required action: Define Approver(s) and get the requirements reviewed and approved.
        /// </summary>
        public static string A30WorkitemsWithStatusDraft {
            get {
                return ResourceManager.GetString("A30WorkitemsWithStatusDraft", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Required action: If a requirement includes “TBD” in the requirement text, the Status should be set to “In Clarification”. Make sure that these requirements get clarified and reviewed in time before implementation starts.
        /// </summary>
        public static string A30WorkItemsWithTBD {
            get {
                return ResourceManager.GetString("A30WorkItemsWithTBD", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Accepted Customer Requirements.
        /// </summary>
        public static string C10AcceptedCustomerRequirements {
            get {
                return ResourceManager.GetString("C10AcceptedCustomerRequirements", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Customer Requirements which cannot be assessed because of missing information, definition or decision
        ///Required action:
        ///1) Try to add missing information or definition to get the requirement assessed
        ///2) Use requirement lists for individual Clarification Roles, if appropriate
        ///3) Set Clarification Role = &quot;Later&quot; if clarification is up to other project members (and not to the Requirements Engineer).
        /// </summary>
        public static string C10CustomerRequirementsInClarification {
            get {
                return ResourceManager.GetString("C10CustomerRequirementsInClarification", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Customer Requirements with Status &quot;In Clarification&quot; but without any information who is required to obtain the missing information or definition
        ///Required actions:
        ///1) Define Clarification Role(s)
        ///2) Specify in &quot;Internal Comments&quot; what needs to be clarified, if applicable.
        /// </summary>
        public static string C10CustomerRequirementsInClarificationWithoutClarificationRole {
            get {
                return ResourceManager.GetString("C10CustomerRequirementsInClarificationWithoutClarificationRole", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Customer Requirements with Clarification Role = “Customer” (only)
        ///Required action: These requirements are marked to be especially communicated to the Customer.
        /// </summary>
        public static string C10CustomerRequirementsWithClarificationRoleCustomer {
            get {
                return ResourceManager.GetString("C10CustomerRequirementsWithClarificationRoleCustomer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Customer Requirements with content in &quot;Customer Action&quot;: action list for the Customer
        ///Required action: Track these issues the Customer is responsible for.
        /// </summary>
        public static string C10CustomerRequirementsWithCustomerAction {
            get {
                return ResourceManager.GetString("C10CustomerRequirementsWithCustomerAction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Customer Requirements which have not been assessed/decided yet. Required action: Make a decision whether the requirement is accepted; assess the requirement).
        /// </summary>
        public static string C10CustomerRequirementsWithStatusMaybeAccepted {
            get {
                return ResourceManager.GetString("C10CustomerRequirementsWithStatusMaybeAccepted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Customer Requirements with Status = No requirement
        ///Required action: These requirements have not been accepted; typically, these requirements are out of scope.
        /// </summary>
        public static string C10CustomerRequirementsWithStatusNo {
            get {
                return ResourceManager.GetString("C10CustomerRequirementsWithStatusNo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Customer Requirements which have not been assessed yet
        ///Required action: Initiate a review of the Customer Requirements for determining its Status.
        /// </summary>
        public static string C10CustomerRequirementsWithStatusOpen {
            get {
                return ResourceManager.GetString("C10CustomerRequirementsWithStatusOpen", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Customer Requirements with content in &quot;Supplier Action&quot;: action list for ZKW-WN
        ///Required action: Track these issues the Supplier is responsible for.
        /// </summary>
        public static string C10CustomerRequirementsWithSupplierAction {
            get {
                return ResourceManager.GetString("C10CustomerRequirementsWithSupplierAction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to For information
        ///Customer Requirements related to CyberSecurity.
        /// </summary>
        public static string C10CyberSecurityRelatedCustomerRequirements {
            get {
                return ResourceManager.GetString("C10CyberSecurityRelatedCustomerRequirements", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to For information
        ///Required action: Go to Recycle Bin and delete the listed requirements.
        /// </summary>
        public static string C10DeletedCustomerRequirements {
            get {
                return ResourceManager.GetString("C10DeletedCustomerRequirements", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Customer Requirements linked to incorrect Element Requirements
        ///Required action: Check subprefixes or correct link.
        /// </summary>
        public static string C10IncorrectlyLinkedCustomerRequirements {
            get {
                return ResourceManager.GetString("C10IncorrectlyLinkedCustomerRequirements", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to All Customer Requirements must be linked to the Element Requirements (according to subindexes, if applicable).
        /// </summary>
        public static string C10LinkageTo20ElementRequirements {
            get {
                return ResourceManager.GetString("C10LinkageTo20ElementRequirements", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Customer Requirements correctly linked to the Element Requirements.
        /// </summary>
        public static string C10LinkedCustomerRequirements {
            get {
                return ResourceManager.GetString("C10LinkedCustomerRequirements", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Only partially accepted Customer Requirements (for details refer to &quot;Internal Comments&quot;).
        /// </summary>
        public static string C10PartlyAcceptedCustomerRequirements {
            get {
                return ResourceManager.GetString("C10PartlyAcceptedCustomerRequirements", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Customer Requirements which have only been partially accepted without explanatory  information 
        ///Required action: Provide information for each partially accepted Customer Requirement which part of it has not been accepted and state a reason in the &quot;Internal Comments&quot; field.
        /// </summary>
        public static string C10PartlyAcceptedCustomerRequirementsWithoutComment {
            get {
                return ResourceManager.GetString("C10PartlyAcceptedCustomerRequirementsWithoutComment", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to For information
        ///Required action: If not already done, communicate rejected Customer Requirements (or Requirements with Status &quot;No requirement&quot;) to the Customer.
        /// </summary>
        public static string C10RejectedCustomerRequirements {
            get {
                return ResourceManager.GetString("C10RejectedCustomerRequirements", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Rejected Customer Requirements without  explanatory  information 
        ///Required action: Provide information for each rejected Customer Requirement as to why it has been rejected.
        /// </summary>
        public static string C10RejectedCustomerRequirementsWithoutComment {
            get {
                return ResourceManager.GetString("C10RejectedCustomerRequirementsWithoutComment", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This Report section provides a complete overview on the Review &amp; Eliciation Status of a Customer Requirements socument.
        /// </summary>
        public static string C10ReviewElicitationStatus {
            get {
                return ResourceManager.GetString("C10ReviewElicitationStatus", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to For information
        ///Customer Requirements related to CyberSecurity.
        /// </summary>
        public static string C10SafetyRelatedCustomerRequirements {
            get {
                return ResourceManager.GetString("C10SafetyRelatedCustomerRequirements", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This Report section includes other noticeable Customer Requirements.
        /// </summary>
        public static string C10SpecialReports {
            get {
                return ResourceManager.GetString("C10SpecialReports", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Customer Requirements not linked to Element Requirements
        ///Required action: Link Customer Requirements to Element Requirements observing subindexes, if applicable.
        /// </summary>
        public static string C10UnlinkedCustomerRequirements {
            get {
                return ResourceManager.GetString("C10UnlinkedCustomerRequirements", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Requirements with invalid Allocation:
        ///-          Invalid Allocation
        ///-          Incorrect interface allocation
        ///-          Incorrect ARCH allocation
        ///
        ///Required action: Correct allocation
        ///-          Valid Allocation: “HW” | “SW” | “Mech”
        ///-          Interface: „Interface“ + „HW“ | „SW“ | „Mech“
        ///-          ARCH:  „ARCH“ + „HW“ | „SW“ | „Mech“
        ///-          ARCH: &quot;ARCH&quot; + &quot;HW&quot; + &quot;SE&quot;
        ///.
        /// </summary>
        public static string C20AllocInvalid {
            get {
                return ResourceManager.GetString("C20AllocInvalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to High-level requirements must be further detailed, unless a different document is specified in “Break down”.
        ///&quot;Break down = &quot;&quot; &quot;: Break down is specified in the 20 Element Requirements by ZKW (link to 10 Additional Requirements)
        ///&quot;Break down = 20&quot;: Break down is specified in the 20 Element Requirements by the Customer (no links to 10 Additional Requirements)
        ///&quot;Break down = 30I&quot;: Break down is specified in the 30 Interface Requirements
        ///&quot;Break down = 40 SW&quot;: Break down is specified in 40 Software Requirements [rest of string was truncated]&quot;;.
        /// </summary>
        public static string C20BreakDown {
            get {
                return ResourceManager.GetString("C20BreakDown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Listed Element Requirements are further specified in 30 Interface Requirements.
        /// </summary>
        public static string C20BreakDown30InterfaceRequirements {
            get {
                return ResourceManager.GetString("C20BreakDown30InterfaceRequirements", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Listed Element Requirements are further specified in 40 HW Requirements.
        /// </summary>
        public static string C20BreakDown40HWRequirements {
            get {
                return ResourceManager.GetString("C20BreakDown40HWRequirements", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Listed Element Requirements are further specified in 40 SW Requirements.
        /// </summary>
        public static string C20BreakDown40SWRequirements {
            get {
                return ResourceManager.GetString("C20BreakDown40SWRequirements", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Requirements with CS-Classification = &quot;relevant&quot;.
        /// </summary>
        public static string C20CybersecurityRelevant {
            get {
                return ResourceManager.GetString("C20CybersecurityRelevant", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to (Element) Requirements with missing WorkItem Properties:
        ///- Verification Discipline
        ///- Verification Method
        ///Required action: Define missing  WorkItem Properties.
        /// </summary>
        public static string C20ElementRequirementsWithMissingVerificationProperties {
            get {
                return ResourceManager.GetString("C20ElementRequirementsWithMissingVerificationProperties", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to High-level Element Requirements with &quot;Break down = 20&quot; and break down requirements correctly specified by Customer.
        ///Required action: Verify that detailed specification is complete.
        /// </summary>
        public static string C20HighLevelElementRequirementsWithBreakDownRequirementsByCustomer {
            get {
                return ResourceManager.GetString("C20HighLevelElementRequirementsWithBreakDownRequirementsByCustomer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to High-level Element Requirements with &quot;Break down = &quot; &quot;&quot; and break down requirements correctly specified ZKW.
        ///Required action: Verify that detailed specification is complete.
        /// </summary>
        public static string C20HighLevelElementRequirementsWithBreakDownRequirementsByZKW {
            get {
                return ResourceManager.GetString("C20HighLevelElementRequirementsWithBreakDownRequirementsByZKW", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to High-level Element requirements without any break down requirements specified by technical engineers. 
        ///Required action: Specify break down requirements, indent and link to &quot;10 Additional Requirements.
        /// </summary>
        public static string C20HighLevelElementRequirementsWithoutBreakDown {
            get {
                return ResourceManager.GetString("C20HighLevelElementRequirementsWithoutBreakDown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to High-level HW Element Requirements with &quot;Break down = 40 HW&quot; (to be specified in the Hardware Requirements) with invalid Allocation.
        ///Required action: modify Allocation or redefine &quot;Break down&quot;.
        /// </summary>
        public static string C20HighLevelHWRequirementsToBeSpecifiedInHWRequirementsWithInvalidAllocation {
            get {
                return ResourceManager.GetString("C20HighLevelHWRequirementsToBeSpecifiedInHWRequirementsWithInvalidAllocation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to High-level Hardware Element Requirements with &quot;Break down = 40 SW&quot; (to be specified in 40 SW Requirements).
        ///Required action: Set &quot;Break down&quot; to &quot;40 HW &quot; (to be specified in 40 HW Requirements) or modify Allocation.
        /// </summary>
        public static string C20HighLevelHWRequirementsToBeSpecifiedInSWRequirements {
            get {
                return ResourceManager.GetString("C20HighLevelHWRequirementsToBeSpecifiedInSWRequirements", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to High-level Element Requirements with &quot;Break down&quot; = &quot;&quot; (to be specified by ZKW) without any break down requirements by technical engineers.
        ///Required action: Specify break down requirements and link to 10 Additional Requirements.
        /// </summary>
        public static string C20HighLevelRequirementsToBeFurtherSpecifiedByZKWWithoutAnyBreakDownRequirements {
            get {
                return ResourceManager.GetString("C20HighLevelRequirementsToBeFurtherSpecifiedByZKWWithoutAnyBreakDownRequirements", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to High-level Element Requirements with &quot;Break down = 20&quot; (to be specified Customer) without any Child Requirements.
        ///Required action: Set &quot;Break down&quot; to &quot; &quot; (to be specified by ZKW) or indent existing child requirements, if applicable.
        /// </summary>
        public static string C20HighLevelRequirementsToBeSpecifiedByCustomerWithoutAnyBreakDownRequirements {
            get {
                return ResourceManager.GetString("C20HighLevelRequirementsToBeSpecifiedByCustomerWithoutAnyBreakDownRequirements", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to High-level Element Requirements with &quot;Break down = 20&quot; (to be specified by Customer) but with Child Requirements by ZKW.
        ///Required action: Set &quot;Break down&quot; to &quot; &quot; (to be specified by ZKW) or resolve conflict otherwise.
        /// </summary>
        public static string C20HighLevelRequirementsWithBreakDownRequirementsErroneouslySpecifiedByZKW {
            get {
                return ResourceManager.GetString("C20HighLevelRequirementsWithBreakDownRequirementsErroneouslySpecifiedByZKW", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to High-level requirements without any child requirements
        ///Required action: Specify detailed requirements and indent them (to create a parent/child relationship to the high-level requirement).
        /// </summary>
        public static string C20HighLevelRequirementsWithoutAnyBreakDownRequirements {
            get {
                return ResourceManager.GetString("C20HighLevelRequirementsWithoutAnyBreakDownRequirements", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to High-level HW/SW or Mech Element Requirements with &quot;Break down = 30I&quot; (to be specified in the Interface Requirements) with invalid Allocation.
        ///Required action: modify Allocation or redefine &quot;Break down&quot;.
        /// </summary>
        public static string C20HighLevelSWHWMechRequirementsToBeSpecifiedInTheInterfaceRequirementsWithÍnvalidAllocation {
            get {
                return ResourceManager.GetString("C20HighLevelSWHWMechRequirementsToBeSpecifiedInTheInterfaceRequirementsWithÍnvali" +
                        "dAllocation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to High-level Software Element Requirements with &quot;Break down = 40 HW&quot; (to be specified in 40 HW Requirements).
        ///Required action: Set &quot;Break down&quot; to &quot;40 SW &quot; (to be specified in 40 SW Requirements)  or modify Allocation.
        /// </summary>
        public static string C20HighLevelSWRequirementsToBeSpecifiedInHWRequirements {
            get {
                return ResourceManager.GetString("C20HighLevelSWRequirementsToBeSpecifiedInHWRequirements", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to High-level SW Element Requirements with &quot;Break down = 40 SW&quot; (to be specified in the Software Requirements) with invalid Allocation.
        ///Required action: modify Allocation or redefine &quot;Break down&quot;.
        /// </summary>
        public static string C20HighLevelSWRequirementsToBeSpecifiedInSWRequirementsWithInvalidAllocation {
            get {
                return ResourceManager.GetString("C20HighLevelSWRequirementsToBeSpecifiedInSWRequirementsWithInvalidAllocation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to „Architecturally significant HW Element Requirements linked to Checklist”.
        /// </summary>
        public static string C20HwEseRequirementsLinkedToChecklist {
            get {
                return ResourceManager.GetString("C20HwEseRequirementsLinkedToChecklist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to „Architecturally significant HW Element Requirements not linked to Checklist”
        ///             Required actions: 
        ///               1) Include corresponding test cases in 30 Review Architectural Design (folder: Verification), if required
        ///               2) Link requirements to corresponding test case in 30 Review Architectural Design”.
        /// </summary>
        public static string C20HwEseRequirementsNotLinkedToChecklist {
            get {
                return ResourceManager.GetString("C20HwEseRequirementsNotLinkedToChecklist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to (Element) Requirements incorrectly linked to test cases
        ///Required action: Correct link direction to test cases.
        /// </summary>
        public static string C20IncorrectlyLinkedElementRequirements {
            get {
                return ResourceManager.GetString("C20IncorrectlyLinkedElementRequirements", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Interface HW Element Requirements linked to Components or non-Interface HW Element Requirements linked to Interfaces. 
        ///Required action: &quot;correct invalid links&quot;.
        /// </summary>
        public static string C20IncorrectlyLinkedHardwareElementRequirements {
            get {
                return ResourceManager.GetString("C20IncorrectlyLinkedHardwareElementRequirements", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Interface SW Element Requirements linked to Components or non-Interface SW Element Requirements linked to Interfaces. 
        ///Required action: &quot;correct invalid links&quot;.
        /// </summary>
        public static string C20IncorrectlySoftwareElementRequirements {
            get {
                return ResourceManager.GetString("C20IncorrectlySoftwareElementRequirements", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to HW Element Requirements must be linked to 30  Element Architecture AND/OR to 50 Hardware Architectural Design, if available.
        /// SW Element Requirements must be linked to 30 Element Architecture OR 50 Hardware Architectural Design..
        /// </summary>
        public static string C20Linkage50HWArchitecturalDesign {
            get {
                return ResourceManager.GetString("C20Linkage50HWArchitecturalDesign", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SW Element Requirements must be linked to &quot;50 SW Architectural Design&quot;.
        /// </summary>
        public static string C20Linkage50SWArchitecturalDesign {
            get {
                return ResourceManager.GetString("C20Linkage50SWArchitecturalDesign", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ARCH with HW must be linked to Checklist in &quot;30 Review Architectural Design&quot; Document.
        /// </summary>
        public static string C20LinkageToArchitectureChecklist {
            get {
                return ResourceManager.GetString("C20LinkageToArchitectureChecklist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to (Element) Requirements must be linked to at least one test case, if applicable.
        /// </summary>
        public static string C20LinkageToTestCases {
            get {
                return ResourceManager.GetString("C20LinkageToTestCases", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to High-level requirements must be further detailed, unless a different document is specified in “break down in”. Break down requirements, added by engineers, are indented (multiple indentation is allowed) and linked to &quot;10 Additional Requirements.
        /// </summary>
        public static string C20LinkageWithinElementRequirements {
            get {
                return ResourceManager.GetString("C20LinkageWithinElementRequirements", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to (Element) Requirements correctly linked to test cases.
        /// </summary>
        public static string C20LinkedElementRequirements {
            get {
                return ResourceManager.GetString("C20LinkedElementRequirements", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Requirements linked to the Element Architecture with Allocation other than &quot;HW&quot;, &quot;SW&quot; or &quot;Mech&quot;.
        /// </summary>
        public static string C20LinkedElementRequirementsWithInvalidAllocation {
            get {
                return ResourceManager.GetString("C20LinkedElementRequirementsWithInvalidAllocation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to HW Element Requirements correctly linked to HW Architectural Design.
        /// </summary>
        public static string C20LinkedHardwareElementRequirements {
            get {
                return ResourceManager.GetString("C20LinkedHardwareElementRequirements", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Requirements linked with 50 Hardware Architectural Design with Allocation other than &quot;HW&quot;.
        /// </summary>
        public static string C20LinkedHardwareElementRequirementsWithInvalidAllocation {
            get {
                return ResourceManager.GetString("C20LinkedHardwareElementRequirementsWithInvalidAllocation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SW Element Requirements correctly linked to SW Architectural Design.
        /// </summary>
        public static string C20LinkedSoftwareElementRequirements {
            get {
                return ResourceManager.GetString("C20LinkedSoftwareElementRequirements", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Requirements linked with 50 Software Architectural Design with Allocation other than &quot;SW&quot;.
        /// </summary>
        public static string C20LinkedSoftwareElementRequirementsWithInvalidAllocation {
            get {
                return ResourceManager.GetString("C20LinkedSoftwareElementRequirementsWithInvalidAllocation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Requirements with ASIL classification other than &quot;QM&quot;.
        /// </summary>
        public static string C20SafetyRelevant {
            get {
                return ResourceManager.GetString("C20SafetyRelevant", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Testcases linked to ARCH Element Requirements.
        /// </summary>
        public static string C20TestcasesLinkedToElementRequirements {
            get {
                return ResourceManager.GetString("C20TestcasesLinkedToElementRequirements", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Testcases not linked to ARCH Element Requirements
        ///Required action:
        ///1) Link testcase to the corresponding ARCH Element Requirement
        ///2) Delete testcase.
        /// </summary>
        public static string C20TestcasesNotLinkedToElementRequirements {
            get {
                return ResourceManager.GetString("C20TestcasesNotLinkedToElementRequirements", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to (Element) Requirements must be linked to at least one test case, if applicable.
        /// </summary>
        public static string C20UnlinkedElementRequirements {
            get {
                return ResourceManager.GetString("C20UnlinkedElementRequirements", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Hardware Element Requirements not linked to HW Architectural Design. 
        ///Required action: link HW requirements to components/interfaces in the HW Architectural Design.
        /// </summary>
        public static string C20UnlinkedHardwareElementRequirements {
            get {
                return ResourceManager.GetString("C20UnlinkedHardwareElementRequirements", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Software Element Requirements not linked to SW Architectural Design. 
        ///Required action: link SW requirements to components/interfaces in &quot;50 SW Architectural Design&quot;.
        /// </summary>
        public static string C20UnlinkedSoftwareElementRequirements {
            get {
                return ResourceManager.GetString("C20UnlinkedSoftwareElementRequirements", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &quot;Verification Method&quot; and &quot;Verification Discipline&quot; shall be defined for all (Element) Requirements.
        /// </summary>
        public static string C20Verification {
            get {
                return ResourceManager.GetString("C20Verification", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Coverage Report checks linkage to all associated documents.
        /// </summary>
        public static string CoverageReport {
            get {
                return ResourceManager.GetString("CoverageReport", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Requirements in Status “Deferred”
        ///Required action: Requirements have been postponed for later implementation. Check if these requirements should be planned for implementation at this time.
        /// </summary>
        public static string DeferredWorkitems {
            get {
                return ResourceManager.GetString("DeferredWorkitems", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specification documents shall be signed (approved). After approval, the document status shall be set to &quot;Approved&quot; or &quot;Accepted&quot; (Element Requirements).
        /// </summary>
        public static string DocSignatureStatus {
            get {
                return ResourceManager.GetString("DocSignatureStatus", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Incorrect Requirement Allocation for architecturally significant requirements
        ///Required action: correct Requirement Allocation: “ARCH” + “HW” / “SW” / “Mech”.
        /// </summary>
        public static string ESEAndNotHWSWMech {
            get {
                return ResourceManager.GetString("ESEAndNotHWSWMech", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Functional requirements define functions of a system or its component..
        /// </summary>
        public static string FunctionalRequirements {
            get {
                return ResourceManager.GetString("FunctionalRequirements", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid Requirement Allocation for functional requirements
        ///Required action: either correct Requirement Allocation (HW / SW / Mech) or define the requirement as non-functional.
        /// </summary>
        public static string FunctionalRequirementsWithInvalidRequirementAllocation {
            get {
                return ResourceManager.GetString("FunctionalRequirementsWithInvalidRequirementAllocation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to List of requirements possibly affected by the CR.
        ///Required action: Analyze potential impact on linked WorkItems using the &quot;Impact Analysis&quot; Tool.
        /// </summary>
        public static string I_RequirementsAffectedByCR {
            get {
                return ResourceManager.GetString("I_RequirementsAffectedByCR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to List of requirements incorrectly linked to CR.
        ///Required action: Fix link direction.
        /// </summary>
        public static string I_RequirenentsIncorrectlyLinkedToCR {
            get {
                return ResourceManager.GetString("I_RequirenentsIncorrectlyLinkedToCR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Interface Element Requirements linked to Components or non-Interface Element Requirements linked to Interfaces
        ///Required action: correct invalid links.
        /// </summary>
        public static string IncorrectlyLinked30ElementRequirements {
            get {
                return ResourceManager.GetString("IncorrectlyLinked30ElementRequirements", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Element Requirements linked to incorrect Interface Requirements
        ///Required action: check prefixes or correct invalid links.
        /// </summary>
        public static string IncorrectlyLinked30iElementRequirements {
            get {
                return ResourceManager.GetString("IncorrectlyLinked30iElementRequirements", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Element Requirements referenced or linked to incorrect Software Requirements
        ///Required action: check prefixes or correct invalid links.
        /// </summary>
        public static string IncorrectlyLinked40SWElementRequirements {
            get {
                return ResourceManager.GetString("IncorrectlyLinked40SWElementRequirements", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Element Requirements referenced or linked to incorrect Hardware Requirements
        ///Required action: check prefixes or correct invalid links.
        /// </summary>
        public static string IncorrectlyLinkedElement40HWRequirements {
            get {
                return ResourceManager.GetString("IncorrectlyLinkedElement40HWRequirements", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Element Requirements linked to incorrect Customer Requirements
        ///Required action: check prefixes or correct invalid links.
        /// </summary>
        public static string IncorrectlyLinkedElementRequirements {
            get {
                return ResourceManager.GetString("IncorrectlyLinkedElementRequirements", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Incorrect Interface Requirement Allocation
        ///Required action: correct Requirement Allocation: “Interface” + “HW” / “SW” / “Mech”.
        /// </summary>
        public static string InterfaceAndNotHWSWMech {
            get {
                return ResourceManager.GetString("InterfaceAndNotHWSWMech", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to HW Element Requirements must be linked to 30  Element Architecture AND/OR to 50 Hardware Architectural Design, if available.
        /// SW Element Requirements must be linked to the Hardware Architecture (30 Element Architecture OR 50 Hardware Architectural Design) AND to 50 Software Architectural Design).
        /// Mech Element Requirements must be linked to 30  Element Architecture.
        /// Element Requirements referenced in 30 Element Architecture are ignored by the Report.
        /// </summary>
        public static string LinkageTo30ElementArchitecture {
            get {
                return ResourceManager.GetString("LinkageTo30ElementArchitecture", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to All HW and/or SW Interface and all HW&amp;SW Element Requirements must be referenced or linked to the Interface Requirements.
        /// </summary>
        public static string LinkageTo30InterfaceRequirements {
            get {
                return ResourceManager.GetString("LinkageTo30InterfaceRequirements", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to All HW Element Requirements must be referenced or linked to the Hardware Requirements.
        /// </summary>
        public static string LinkageTo40HardwareRequirements {
            get {
                return ResourceManager.GetString("LinkageTo40HardwareRequirements", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to All SW Element Requirements must be referenced or linked to the Software Requirements.
        /// </summary>
        public static string LinkageTo40SoftwareRequirements {
            get {
                return ResourceManager.GetString("LinkageTo40SoftwareRequirements", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to All Element Requirements must be linked to the Customer Requirements.
        /// </summary>
        public static string LinkageToCustomerRequirements {
            get {
                return ResourceManager.GetString("LinkageToCustomerRequirements", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Element Requirements correctly linked to Element Requirements.
        /// </summary>
        public static string Linked30ElementRequirements {
            get {
                return ResourceManager.GetString("Linked30ElementRequirements", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Element Requirements correctly linked to Interface Requirements.
        /// </summary>
        public static string Linked30iElementRequirements {
            get {
                return ResourceManager.GetString("Linked30iElementRequirements", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Element Requirements correctly referenced or linked to Hardware Requirements.
        /// </summary>
        public static string Linked40HWElementRequirements {
            get {
                return ResourceManager.GetString("Linked40HWElementRequirements", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Element Requirements correctly referenced or linked to Software Requirements.
        /// </summary>
        public static string Linked40SWElementRequirements {
            get {
                return ResourceManager.GetString("Linked40SWElementRequirements", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Element Requirements correctly linked to Customer Requirements.
        /// </summary>
        public static string LinkedElementRequirements {
            get {
                return ResourceManager.GetString("LinkedElementRequirements", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Requirements with document name(s) specified in “Referred Documents” but without any hyperlink(s).
        ///Required action: locate the document(s) and define hyperlink(s).
        /// </summary>
        public static string MissingHyperlinks {
            get {
                return ResourceManager.GetString("MissingHyperlinks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Required action: If Element Requirements refer to documents, the document name(s) shall be entered in “Referred Documents” and the hyperlink to the document(s) shall be included with the requirement.
        /// </summary>
        public static string MissingReferredDocuments {
            get {
                return ResourceManager.GetString("MissingReferredDocuments", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Requirements with content in “Referred Documents” and defined hyperlink(s)
        ///Required action: These applicable documents shall be considered for implementation; individual requirements may be extracted from these documents, if necessary.
        /// </summary>
        public static string ReferredDocuments {
            get {
                return ResourceManager.GetString("ReferredDocuments", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to For information
        ///Required action: If not already done, communicate rejected requirements to the Customer.
        /// </summary>
        public static string RejectedWorkitems {
            get {
                return ResourceManager.GetString("RejectedWorkitems", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Requirement Allocation shall be correctly defined for all Element Requirements.
        /// </summary>
        public static string RequirementAllocation {
            get {
                return ResourceManager.GetString("RequirementAllocation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Requirement Status should be “Approved”, “Rejected”, “Deferred” or any Status referring to implementation or verification.
        /// </summary>
        public static string RequirementStatus {
            get {
                return ResourceManager.GetString("RequirementStatus", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Approved, implemented or verified requirements without any Approvers should never exist! 
        ///Required action: Check the requirement history for retrieving the name(s) of the Approvers, add the Approvers, if applicable.
        /// </summary>
        public static string ReviewApprovedWorkItemsWithoutApprovers {
            get {
                return ResourceManager.GetString("ReviewApprovedWorkItemsWithoutApprovers", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to List of requirements ready to be reviewed (Clarification role = &quot;To_Review&quot;)
        ///Required action:
        ///- Check requirements
        ///- Check Workitem properties
        ///- Check traceability
        ///- Initiate review.
        /// </summary>
        public static string ReviewReadyForReview {
            get {
                return ResourceManager.GetString("ReviewReadyForReview", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Rejected requirements; especially in Document View this may be easily overlooked. If the Approval State is still “Waiting”, Approvers may review a rejected requirement by mistake.
        ///Required action:  It is recommended to remove Approvers from rejected requirements to prevent unnecessary effort.
        /// </summary>
        public static string ReviewRejectedWorkItemsWithApprovers {
            get {
                return ResourceManager.GetString("ReviewRejectedWorkItemsWithApprovers", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This Report section provides a complete overview on the Review Status of a requirement specification document.
        /// </summary>
        public static string ReviewStatus {
            get {
                return ResourceManager.GetString("ReviewStatus", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Requirements with Approvers in Approval State “Waiting” but not in Status “In Review”
        ///Required action: Set requirements to “In Review”.
        /// </summary>
        public static string ReviewWorkitemApprovalStateWaitingStatusNotInReview {
            get {
                return ResourceManager.GetString("ReviewWorkitemApprovalStateWaitingStatusNotInReview", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Approved requirements in Status “Draft”, “In Clarification” or “Disapproved”; that is, requirements have been approved, although they were not in Status “In Review”
        ///Required action:
        ///1.	Check requirements whether Approval is still valid
        ///2.	Set Status to “Approved” if Approval was valid
        ///3.	Set Status to “In Review” and set Approvers.
        /// </summary>
        public static string ReviewWorkitemsApprovalStateApprovedStatusWrong {
            get {
                return ResourceManager.GetString("ReviewWorkitemsApprovalStateApprovedStatusWrong", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Negative approval feedback; in that case, a Disapproval Comment is mandatory. Mind that there are two separate workflows for “Approval Status” and “Requirement Status”.
        ///
        ///Required action:
        ///Disapproved requirements must be processed (according to the Disapproval Comment):
        ///·         Requirement may be set to Requirement Status = ‘Disapproved’ to be able to edit it (the Approval Status is not changed by this Requirement Status change). If the requirement has been modified based on the Disapproval Comment, it [rest of string was truncated]&quot;;.
        /// </summary>
        public static string ReviewWorkItemsApprovalStateDisapproved {
            get {
                return ResourceManager.GetString("ReviewWorkItemsApprovalStateDisapproved", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Requirements disapproved by a particular Approver
        ///Required actions: Refer to tooltip for “WorkItems with Approval Status ‘Disapproved’.
        /// </summary>
        public static string ReviewWorkItemsApprovalStateDisapprovedNN {
            get {
                return ResourceManager.GetString("ReviewWorkItemsApprovalStateDisapprovedNN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Requirements that could not been reviewed because of missing information or definition
        ///Required action:
        ///1)	Try to add missing information or definition to get the requirement reviewed
        ///2)	Use requirement lists for individual Clarification Roles, if appropriate 
        ///3) Set Clarification Role = &quot;Later&quot; if clarification is up to other project members (and not to the Requirements Engineer).
        /// </summary>
        public static string ReviewWorkItemsInClarification {
            get {
                return ResourceManager.GetString("ReviewWorkItemsInClarification", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to List of all requirements with any “Clarification Role”
        ///Required action:
        ///See tooltip for “WorkItems in Clarification”.
        /// </summary>
        public static string ReviewWorkItemsInClarificationAll {
            get {
                return ResourceManager.GetString("ReviewWorkItemsInClarificationAll", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to List of all requirements with Clarification Role “N.N. Mind that individual requirement lists are offered for any Clarification Role combination.
        ///Required action:
        ///1)	Try to add missing information or definition to get the requirement reviewed
        ///2)	Requirements must be fully clarified if it is included in an upcoming development step.
        /// </summary>
        public static string ReviewWorkItemsInClarificationRole {
            get {
                return ResourceManager.GetString("ReviewWorkItemsInClarificationRole", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Requirements with Status other than &quot;In Clarification&quot; with Clarification Role.
        ///Required action: It is recommended to remove Clarification Roles if not needed anymore.
        /// </summary>
        public static string ReviewWorkItemsNotInClarificationWithClarificationRole {
            get {
                return ResourceManager.GetString("ReviewWorkItemsNotInClarificationWithClarificationRole", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Requirements with Approval State = “Approved”
        ///Required action: Set Requirement Status to “Approved”.
        /// </summary>
        public static string ReviewWorkItemsReadyToBeApproved {
            get {
                return ResourceManager.GetString("ReviewWorkItemsReadyToBeApproved", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Successfully reviewed and approved requirements.
        /// </summary>
        public static string ReviewWorkItemsStatusApproved {
            get {
                return ResourceManager.GetString("ReviewWorkItemsStatusApproved", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Due to a previous negative approval feedback, requirements have been set to Requirement Status “Disapproved” (to be able to edit them). The Approval Status has not been changed by setting Requirement Status = “Disapproved”. With Disapprovals, a Disapproval Comment is mandatory. Mind that there are two separate workflows for “Approval Status” and “Requirement Status”.
        ///
        ///Required action:
        ///Disapproved requirements must be processed (according to the Disapproval Comment):
        ///·         If a requirement has been m [rest of string was truncated]&quot;;.
        /// </summary>
        public static string ReviewWorkItemsStatusDisapproved {
            get {
                return ResourceManager.GetString("ReviewWorkItemsStatusDisapproved", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Requirements disapproved by a particular Approver
        ///Required actions: Refer to tooltip for WorkItems with Requirement Status ‘Disapproved’.
        /// </summary>
        public static string ReviewWorkItemsStatusDisapprovedNN {
            get {
                return ResourceManager.GetString("ReviewWorkItemsStatusDisapprovedNN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Requirements “in Review” without any Approvers
        ///Required action: Assign Approver(s) to get the requirements reviewed..
        /// </summary>
        public static string ReviewWorkItemsStatusInReviewWithoutApprovers {
            get {
                return ResourceManager.GetString("ReviewWorkItemsStatusInReviewWithoutApprovers", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Requirements in Approval State = “Waiting”. Click to open separate lists for individual Approvers.
        /// </summary>
        public static string ReviewWorkItemsWaitingForApproval {
            get {
                return ResourceManager.GetString("ReviewWorkItemsWaitingForApproval", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Requirements waiting for Approval.
        /// </summary>
        public static string ReviewWorkItemsWaitingForApprovalAll {
            get {
                return ResourceManager.GetString("ReviewWorkItemsWaitingForApprovalAll", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Requirements waiting for Approval by N.N.
        ///Required action: Remind the Approver to complete the requirements review, if necessary.
        /// </summary>
        public static string ReviewWorkItemsWaitingForApprovalNN {
            get {
                return ResourceManager.GetString("ReviewWorkItemsWaitingForApprovalNN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Requirements with Clarification Role =&quot;Customer&quot; (only).
        ///Required action: These requirements are marked to be especially communicated to the Customer.
        /// </summary>
        public static string ReviewWorkItemsWithClarificationRoleCustomer {
            get {
                return ResourceManager.GetString("ReviewWorkItemsWithClarificationRoleCustomer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Requirements with Status “In Clarification” but without a Clarification Role
        ///Required action:
        ///1)	Define Clarification Role(s)
        ///2)	Specify in “Internal Comments” what needs to be clarified, if applicable.
        /// </summary>
        public static string ReviewWorkItemsWithoutClarificationRole {
            get {
                return ResourceManager.GetString("ReviewWorkItemsWithoutClarificationRole", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This report section includes other noticeable requirements.
        /// </summary>
        public static string SpecialReports {
            get {
                return ResourceManager.GetString("SpecialReports", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Status Report lists noticeable requirements, checks the Requirement Allocation as well as the Functional Requirement setting..
        /// </summary>
        public static string StatusConsitencyReport {
            get {
                return ResourceManager.GetString("StatusConsitencyReport", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Element Requirements not linked to the Element Architecture
        ///Required action: define missing links.
        /// </summary>
        public static string Unlinked30ElementRequirements {
            get {
                return ResourceManager.GetString("Unlinked30ElementRequirements", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Element Requirements not linked to Interface Requirements
        ///Required action: define missing links.
        /// </summary>
        public static string Unlinked30iElementRequirements {
            get {
                return ResourceManager.GetString("Unlinked30iElementRequirements", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Element Requirements not referenced or linked to Hardware Requirements
        ///Required action: define missing links.
        /// </summary>
        public static string Unlinked40HWElementRequirements {
            get {
                return ResourceManager.GetString("Unlinked40HWElementRequirements", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Element Requirements not referenced or linked to Software Requirements
        ///Required action: define missing links.
        /// </summary>
        public static string Unlinked40SWElementRequirements {
            get {
                return ResourceManager.GetString("Unlinked40SWElementRequirements", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Element Requirements not linked to Customer Requirements
        ///Required action: define missing links.
        /// </summary>
        public static string UnlinkedElementRequirements {
            get {
                return ResourceManager.GetString("UnlinkedElementRequirements", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to For information
        ///Required action: Go to Recycle Bin and delete the listed requirements.
        /// </summary>
        public static string WorkitemInBin {
            get {
                return ResourceManager.GetString("WorkitemInBin", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Requirements in Status “In Clarification”
        ///Required action: make sure that these requirements get clarified and reviewed in time before implementation starts.
        /// </summary>
        public static string WorkitemsInClarification {
            get {
                return ResourceManager.GetString("WorkitemsInClarification", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Requirements in Status “In Review”
        ///Required action: make sure that the review will be completed and set the Requirement Status accordingly.
        /// </summary>
        public static string WorkitemsInReview {
            get {
                return ResourceManager.GetString("WorkitemsInReview", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Requirements with content in “Customer Action”; action list for the Customer
        ///Required action: track these issues the Customer is responsible for.
        /// </summary>
        public static string WorkitemsWithCustomerAction {
            get {
                return ResourceManager.GetString("WorkitemsWithCustomerAction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Architecturally significant HW Element Requirements
        ///Required action: include these requirements in the “Checklist Review HW Architectural Design”.
        /// </summary>
        public static string WorkitemsWithESEAndHW {
            get {
                return ResourceManager.GetString("WorkitemsWithESEAndHW", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Architecturally significant SW Element Requirements
        ///Required action: consider these requirements when designing the Software Architecture.
        /// </summary>
        public static string WorkitemsWithESEAndSW {
            get {
                return ResourceManager.GetString("WorkitemsWithESEAndSW", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Element Requirements without any Requirement Allocation
        ///Required action: define Requirement Allocation.
        /// </summary>
        public static string WorkItemsWithoutAllocation {
            get {
                return ResourceManager.GetString("WorkItemsWithoutAllocation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Required action: If the Prioritization is “Should Have”, it should be checked that the requirement text also includes “should have”..
        /// </summary>
        public static string WorkitemsWithPrioritization {
            get {
                return ResourceManager.GetString("WorkitemsWithPrioritization", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Requirements in Status “Draft”
        ///Required action: set Status to “Review”, define Approver(s) and get the requirements reviewed and approved.
        /// </summary>
        public static string WorkitemsWithStatusDraft {
            get {
                return ResourceManager.GetString("WorkitemsWithStatusDraft", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Requirements with content in “Supplier Action”; action list for ZKW-WN
        ///Required action: track these issues the Supplier is responsible for.
        /// </summary>
        public static string WorkitemsWithSupplierAction {
            get {
                return ResourceManager.GetString("WorkitemsWithSupplierAction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Required action: If a requirement includes “TBD” in the requirement text, the Status should be set to “In Clarification”. Make sure that these requirements get clarified and reviewed in time before implementation starts.
        /// </summary>
        public static string WorkItemsWithTBD {
            get {
                return ResourceManager.GetString("WorkItemsWithTBD", resourceCulture);
            }
        }
    }
}
